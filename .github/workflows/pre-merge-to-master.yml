name: On Pre-Merge to Master

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [master]

jobs:
  discover-images:
    name: Discover Images
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Collect Image Metadata
        id: collect
        run: |
          set -euo pipefail

          mapfile -t dockerfiles < <(find images -type f -name 'Dockerfile' -print | sort)
          if [ "${#dockerfiles[@]}" -eq 0 ]; then
            echo 'matrix=[]' >>"$GITHUB_OUTPUT"
            exit 0
          fi

          matrix_json=$(
            for dockerfile in "${dockerfiles[@]}"; do
              [ -z "${dockerfile}" ] && continue
              context=$(dirname "${dockerfile}")
              name=$(basename "${context}")
              jq -nc \
                --arg name "${name}" --arg context "${context}" --arg file "${dockerfile}" \
                '{name: $name, context: $context, file: $file}'
            done | jq -s '.'
          )

          echo "Discovered matrix: ${matrix_json}"
          echo "matrix=${matrix_json}" >>"$GITHUB_OUTPUT"

  build-images:
    name: Build ${{ matrix.image.name }} Image
    needs: discover-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        image: ${{ fromJson(needs.discover-images.outputs.matrix) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.image.name }} Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.file }}
          push: false
          provenance: false
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.image.name }}
          cache-to: type=gha,scope=${{ github.workflow }}-${{ matrix.image.name }},mode=max

  report-build-status:
    name: Report Image Build Status
    needs: build-images
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Report Build Status
        run: |
          result='${{ needs.build-images.result }}'
          level="notice"

          if [ "${result}" != "success" ]; then
            level="error"
          fi

          echo "::${level}::Image build job outcome: ${result}"
          if [ "${result}" != "success" ]; then
            exit 1
          fi
